services:

  frontend:
    container_name: flutter_frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - ping_backend
      - app_auth


  app_auth:
    container_name: app_auth
    build:
      context: ./admin
    ports:
      - "8095:8095"
    depends_on:
      bd_auth:
        condition: service_healthy

  bd_auth:
    container_name: bd_auth
    image: postgres:latest
    restart: always
    ports:
      - "5433:5433"
    env_file:
      - .env
    command: postgres -p 5433
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -p 5433" ]
      interval: 10s
      timeout: 5s
      retries: 3

  ping_backend:
    container_name: ping_backend
    build:
      context: ./backend
    ports:
      - "8080:8080"
    depends_on:
      bd_ping:
        condition: service_healthy

  bd_ping:
    container_name: bd_ping
    image: postgres:latest
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345
      POSTGRES_DB: postgres
    volumes:
      - pingdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 30s
      timeout: 5s
      retries: 10

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:7.8.0
    ports:
      - "9092:9092"
    depends_on:
      zookeeper:
        condition: service_started
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:7.8.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8090:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    links:
      - kafka
      - zookeeper

  pgadmin4:
    image: elestio/pgadmin:latest
    container_name: pgadmin
    restart: always
    ports:
      - "5050:80"
    volumes:
      - ./config/pgadmin/servers.json:/pgadmin4/servers.json
    env_file:
      - .env

volumes:
  pgdata:
  pingdata:
